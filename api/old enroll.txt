@api_view(['POST'])
def inrollCourseToUser(request,paymentType):
    fullResp=''
    usrId=request.data['userId']
    usrNumber=request.data['number']
    usrMoney=request.data['money']
    crsId=request.data['courseId']
    months=request.data['months']
    referralCode=request.data['referralCode']
    cupponCode=request.data['cupponCode']
    # status=request.data['status']
    enrollingCourse=QaCourses.objects.get(pk=crsId)
    if enrollingCourse.itsFree or enrollingCourse.regularPrice == 0:
        try:
            fullResp=enrollCourseFuntion(paymentType,crsId,usrId,months,referralCode,cupponCode)
        except:
            fullResp={"status":False,"message":"course id or user id invalid"}
    else:
        fullResp=takePaymentFromTheUser(paymentType,usrNumber,usrMoney)
        if fullResp['paided'] and (fullResp['paymentType'] == 'waafi' or fullResp['paymentType'] == 'eDahab'):
            fullResp=enrollCourseFuntion(paymentType,crsId,usrId,months,referralCode,cupponCode)
        elif fullResp['paided'] and fullResp['paymentType']=='cashOnDelivery':
            simResp=enrollCourseFuntion(paymentType,crsId,usrId,months,referralCode,cupponCode)
            fullResp={'paided':False,'status':'success','scopeId':simResp['scopeId'],'message':simResp['message']}
        else:
            fullResp={'paided':False,'status':'failed','scopeId':'','message':'Processka lacag bixinta laguma guulaysan fadlan ku celi markale'}
    return Response(fullResp)

def enrollCourseFuntion(paymentType,crsId,usrId,months,referralCode,cupponCode):
    fullResp=''
    if InrolledCourse.objects.filter(theCourse=crsId,theUser=UserProfile.objects.get(pk=usrId)).exists()==False:
        theCourse= InrolledCourse.objects.create(
            theUser=UserProfile.objects.get(pk=usrId),
            theCourse=QaCourses.objects.get(pk=crsId),
            dateInrolled=datetime.now(),
            startDate=datetime.now(),
            referralCode=referralCode,
            cupponCode=cupponCode,
            endDate=datetime.now() + timedelta(days=int(months)*30),
            courseProgress=0,
            # currentLesson=getThisCourseFirstLesson(QaCourses.objects.get(pk=crsId)),
            status=True,
            stayedSeconds=0,
            paymentType=paymentType,
            itsLatestAccessedCourse=True
        )
        inrolledUserList= QaCourses.objects.get(pk=crsId)
        if paymentType=='cashOnDelivery':
            theCourse.status=False
            theCourse.paided=False
        inrolledUserList.inrolledUsers.add(UserProfile.objects.get(pk=usrId))
        inrolledUserList.save()
        fullResp={'paided':True,'status':'success','scopeId':theCourse.pk,'message':'Waad Ku Guuleesatay Iska Diiwaangalinta Courskan'}
    else:
        theCourse=InrolledCourse.objects.get(theCourse=crsId,theUser=UserProfile.objects.get(pk=usrId))
        if paymentType=='cashOnDelivery':
            theCourse.status=False
            theCourse.paided=False
        theCourse.currentLesson=getThisCourseFirstLesson(theCourse.theCourse)
        theCourse.startDate=datetime.now()
        theCourse.endDate= (datetime.now() + timedelta(days=int(months)*30))
        # theCourse.endDate=str(datetime.now() + timedelta(days=int(months)*30)).split(' ')[0]
        theCourse.save()
        if paymentType=='cashOnDelivery':
            fullResp={'paided':False,'courseInfo':{'courseTitle':theCourse.theCourse.title,'fromDate':theCourse.startDate,'toDate':theCourse.endDate},'status':'success','scopeId':theCourse.pk,'message':'Waad ku mahadsantahy iska diiwaangalinta courskan fadlan la xiriir cawiyayaasha si lagu gu furo courska'}
        else:
            fullResp={'paided':True,'courseInfo':{'courseTitle':theCourse.theCourse.title,'fromDate':theCourse.startDate,'toDate':theCourse.endDate},'status':'success','scopeId':theCourse.pk,'message':'Waad Ku Guuleesatay Iska Diiwaangalinta Courskan Markale'}
    return fullResp

